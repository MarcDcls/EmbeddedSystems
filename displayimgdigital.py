# -*- coding: utf-8 -*-
"""displayImgDigital.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H1BJTiG989Ok3iIwDd5BePkesKxu1_N1
"""

import matplotlib.pyplot as plt
import numpy as np
from skimage.color import rgb2gray
import math
import cv2

img = plt.imread('helloword.png')
imggray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)

plt.imshow(imggray)
plt.show()

img = plt.imread('helloword.png')
imggray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
(tresh, bw_img)=cv2.threshold(imggray,0.5,1,cv2.THRESH_BINARY)

plt.imshow(bw_img)
plt.show()

heigth=bw_img.shape[1]
width=bw_img.shape[0]
print(heigth, width)
N=240


trans=np.transpose(bw_img)
imgplot = plt.imshow(trans)

plt.show()

cropped=trans[230:trans.shape[0]-230,110:trans.shape[1]-110]
imgplot = plt.imshow(cropped)

plt.show()
print(cropped.shape[0], cropped.shape[1])


cropped_top_tmp= cropped[0:500,0:250]
cropped_top= cropped_top_tmp[::-1,:]

cropped_bottom_tmp= cropped[0:500,250:500]
cropped_bottom=cropped_bottom_tmp[:,::-1]

imgplot = plt.imshow(cropped_top)

plt.show()
imgplot = plt.imshow(cropped_bottom)

plt.show()

largeurCase=cropped_top.shape[0]//(N//2)
hauteurCase=cropped_top.shape[1]//18

imgf=[]
for i in range(N//2):
    colonne='0b'
    for j in range(16):
        compt=0
        for k in range (largeurCase):
            for l in range(hauteurCase):
                compt=compt+cropped_top[k+i*largeurCase+2*largeurCase][l+j*hauteurCase]
        moyenne=compt/(largeurCase*hauteurCase)
        if moyenne>0.5:
            colonne=colonne+'1'
        else:
            colonne=colonne+'0'
    imgf.append(colonne)
for i in range(N//2):
    colonne='0b'
    for j in range(16):
        compt=0
        for k in range (largeurCase):
            for l in range(hauteurCase):
                compt=compt+cropped_bottom[k+i*largeurCase+2*largeurCase][l+j*hauteurCase]
        moyenne=compt/(largeurCase*hauteurCase)
        if moyenne>0.5:
            colonne=colonne+'1'
        else:
            colonne=colonne+'0'
    imgf.append(colonne)
print(imgf)

